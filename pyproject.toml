[project]
name = "langchain-pdf"
dynamic = ["version"]
description = "Default template for PDM package"
authors = [
    {name = "Yongky Putra", email = "dayongky@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
]
dependencies = [
    "boto3==1.26.122",
    "botocore==1.29.122",
    "celery==5.3.1",
    "click==8.1.3",
    "Flask==2.3.1",
    "flask-sqlalchemy==3.0.3",
    "flask-cors==4.0.0",
    "langchain==0.0.352",
    "openai==0.27.8",
    "python-dotenv==1.0.0",
    "Werkzeug==2.3.1",
    "invoke==2.2.0",
    "pinecone-client==2.2.2",
    "pypdf==3.15.4",
    "watchdog==3.0.0",
    "tiktoken==0.4.0",
    "uuid==1.30",
    "langfuse==1.0.18",
    "backoff==2.2.1",
    "redis==5.0.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pdm.dev-dependencies]
lint = [
    "ruff>=0.1.13",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
test = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.4",
]

[tool.pdm.scripts]
lint = "pre-commit run --all-files"
docs = "mkdocs serve"
test = "pytest -v tests"

init-db = "flask --app app.web init-db"
files = "flask --app files.app run --debug --port 8050"
dev = "flask --app app.web run --debug --port 8000"
devworker = "watchmedo auto-restart --directory=./src/app --pattern=*.py --recursive -- celery -A src.app.celery.worker worker --concurrency=1 --loglevel=INFO --pool=solo"

[tool.hatch.build.targets.wheel]
packages = ["src/app"]

[tool.hatch.version]
path = "src/app/__init__.py"

[tool.ruff]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle - Error
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle - Warning
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "W191", # tab-indentation
    "F401", # unused-import
]
include = ["**/*.py", "**/*.pyi", "**/pyproject.toml"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
strict = true

[tool.coverage.run]
parallel = true
source = [
    "app",
    "tests",
]
